[{"C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\index.tsx":"1","C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\serviceWorker.ts":"2","C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\app\\store.ts":"3","C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\App.tsx":"4","C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\features\\counter\\counterSlice.ts":"5","C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\features\\main\\Main.tsx":"6","C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\features\\header\\Header.tsx":"7","C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\features\\evaluees\\Evaluees.tsx":"8","C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\features\\evaluee\\Evaluee.tsx":"9"},{"size":648,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":5424,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":414,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":290,"mtime":1611054392116,"results":"14","hashOfConfig":"11"},{"size":1851,"mtime":499162500000,"results":"15","hashOfConfig":"11"},{"size":1982,"mtime":1611066791519,"results":"16","hashOfConfig":"11"},{"size":197,"mtime":1610901308122,"results":"17","hashOfConfig":"11"},{"size":1900,"mtime":1610998435091,"results":"18","hashOfConfig":"11"},{"size":1216,"mtime":1610994837482,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1j4mrxx",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\index.tsx",[],["40","41"],"C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\serviceWorker.ts",[],"C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\app\\store.ts",[],"C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\App.tsx",[],"C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\features\\counter\\counterSlice.ts",[],"C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\features\\main\\Main.tsx",[],"C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\features\\header\\Header.tsx",[],"C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\features\\evaluees\\Evaluees.tsx",[],"C:\\Users\\jonat\\Desktop\\exercise\\sociometric-exercise\\client\\src\\features\\evaluee\\Evaluee.tsx",["42"],"import React, { useState, useEffect } from 'react'\r\nimport styles from './Evaluee.module.css';\r\n\r\ninterface Props {\r\n  evalueeInput: { id: string, name: string, fetcures: {} };\r\n  onChanged: (evaluee: { id: string, name: string, fetcures: {} }) => void;\r\n}\r\n\r\nexport const Evaluee: React.FC<Props> = ({ evalueeInput, onChanged }) => {\r\n  const [evaluee, setevaluee] = useState(evalueeInput.fetcures)\r\n\r\n  const handelChanged = (e: any) => {\r\n    const updatedevaluee = { ...evaluee, [e.target.id]: e.target.value }\r\n    setevaluee(updatedevaluee)\r\n  }\r\n\r\n  useEffect(() => {\r\n    onChanged({ ...evalueeInput, fetcures: evaluee })\r\n  }, [evaluee])\r\n\r\n  return (\r\n    <div className={styles.formContainer}>\r\n      <div className={styles.evalueeName}>{evalueeInput.name}</div>\r\n      {\r\n        Object.keys(evaluee).map((question) => (\r\n          <div key={question} className={styles.inputBox}>\r\n            <input className={styles.input}\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"6\"\r\n              id={question}\r\n              name={question}\r\n              value={evaluee[question]}\r\n              onChange={handelChanged} />\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n}",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":19,"column":6,"nodeType":"49","endLine":19,"endColumn":15,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'evalueeInput' and 'onChanged'. Either include them or remove the dependency array. If 'onChanged' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [evaluee, evalueeInput, onChanged]",{"range":"56","text":"57"},[636,645],"[evaluee, evalueeInput, onChanged]"]